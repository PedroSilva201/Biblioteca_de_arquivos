TESTE.JAVA

package br.gov.sp.fatec.projetotopicos.entity;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import javax.persistence.Column;
@Entity
@Table(name = "Teste")
public class Teste {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "usr_id")
    private Long id;

    @Column(name = "usr_nome")
    private String nome;

    @Column(name = "usr_senha")
    private String senha;

public Long getId() {
    return id;
}

public void setId(Long id) {
    this.id = id;
}

public String getNome() {
    return nome;
}

public void setNome(String nome) {
    this.nome = nome;
}

public String getSenha() {
    return senha;
}

public void setSenha(String senha) {
    this.senha = senha;
}

}

------------------------------------
TESTEREPOSITORY.JAVA

package br.gov.sp.fatec.projetotopicos.repository;

import org.springframework.stereotype.Repository;

import br.gov.sp.fatec.projetotopicos.entity.Teste;
import java.util.List;
import org.springframework.data.jpa.repository.JpaRepository;
@Repository
public interface TesteRepository extends JpaRepository<Teste, Long> { 
    /**
     * @param nome
     * @return
     */
    public List<Teste> findByNomeContains(String nome);
}

-----------------------------------------------------
TESTECONTROLLER.JAVA

package br.gov.sp.fatec.projetotopicos.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import br.gov.sp.fatec.projetotopicos.entity.Usuario;
import br.gov.sp.fatec.projetotopicos.repository.UsuarioRepository;

@RestController
@RequestMapping(value = "/teste")
@CrossOrigin
public class TesteController {

    @Autowired
    private UsuarioRepository usuarioRepository;

    @GetMapping(value = "/teste")
    public List<Usuario> buscarTodos(@RequestBody String Nome) {
        return usuarioRepository.findByNomeContains(Nome);
    }

}